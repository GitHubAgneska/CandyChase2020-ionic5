{"version":3,"sources":["src/app/play/addresses/addresses.component.html","src/app/play/addresses/addresses.component.ts","src/app/play/backpack/backpack.component.html","src/app/play/backpack/backpack.component.ts","src/app/play/candy-details/candy-details.component.html","src/app/play/candy-details/candy-details.component.ts","src/app/play/candy-list/candy-list.component.html","src/app/play/candy-list/candy-list.component.ts","src/app/play/cards/cards.component.html","src/app/play/cards/cards.component.ts","src/app/play/level/level.component.html","src/app/play/level/level.component.ts","src/app/play/map/map.component.html","src/app/play/map/map.component.ts","src/app/play/play-routing.module.ts","src/app/play/play.module.ts","src/app/play/services/candy-api.service.ts","src/app/play/services/level-api.service.ts","src/app/play/services/user-stats.service.ts","src/app/play/user-stats/user-stats.component.html","src/app/play/user-stats/user-stats.component.ts","src/app/shared/pipes/keyvalue/keyvalue.ts","src/app/shared/pipes/pipes.module.ts","src/app/shared/pipes/remove-chars/remove-chars.ts","src/app/shared/pipes/remove-underscore/remove-underscore.ts","src/app/shared/pipes/shorten-string/shorten-string.ts"],"names":[],"mappings":"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","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"customColor\">\n    <ion-title text-center>Your addresses</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"addressesPage-container\">\n\n  <div class=\"map-sample\">\n    <img src=\"assets/graphicMat/map_sample.png\" alt=\"\" />\n  </div>\n\n  <div class=\"address-list-container\">\n    <h5></h5>\n    <div class=\"address-item\">\n      <h6></h6>\n    </div>\n    <img src=\"assets/graphicMat/haunted_house.png\" alt=\"\" />\n  </div>\n\n</ion-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addresses',\n  templateUrl: './addresses.component.html',\n  styleUrls: ['./addresses.component.scss'],\n})\nexport class AddressesComponent implements OnInit {\n\n  constructor( ) { }\n\n  ngOnInit() {}\n\n}\n","<ion-header>\n  <ion-toolbar color=\"customColor\">\n    <ion-title text-center class=\"toolbarTitle\">Backpack</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"backpackPage-container\">\n\n  <div class=\"backpack-elements-container\" *ngIf=\"collectedCandy\">\n    <div class=\"bag-illust\">\n      <img src=\"assets/graphicMat/candyBag.png\" alt=\"\" />\n    </div>\n\n    <div class=\"totalcandy\">\n      <h2>Total candy</h2>\n      <h2>{{ totalCandy }}</h2>\n    </div>\n\n    <div class=\"cornCandy-container\">\n      <ng-container *ngFor=\"let i of [].constructor(3)\">\n        <img src=\"assets/graphicMat/corn_candy.png\" alt=\"\" />\n      </ng-container>\n    </div>\n\n    <div class=\"totalpoints\">\n      <h2>You have</h2>\n      <h2>{{ totalCandy }} points !</h2>\n    </div>\n\n<!-- TO DO : get level (banner) at init --\n      <div class=\"current-level\">\n          <h2>Current level</h2>\n          <h2>{{levelName}}</h2>\n      </div> -->\n\n    <div class=\"myCollectedCandy\" *ngFor=\"let item of collectedCandy\">\n      <div class=\"candyItem\">\n        <div class=\"candyThumbnail\">\n          <img src=\"{{item.image_front_url}}\">\n        </div>\n        <div class=\"candyName\">\n          <!-- <h2>{{data.brands_tags[1]}}</h2> -->\n          <h1>{{ item.product_name | shortenString:30 }}</h1>\n          <button (click)=\"seeCandyInfos(item._id)\">see infos</button>\n        </div>\n        <div class=\"amount\">\n          <h1>{{ item.amountInBackpack }}</h1>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { CandyI, CandyChecklistI } from '../../shared/models/candy.interface';\nimport { Router } from '@angular/router';\nimport { UserStatsService } from '../services/user-stats.service';\n\n@Component({\n  selector: 'app-backpack',\n  templateUrl: './backpack.component.html',\n  styleUrls: ['./backpack.component.scss'],\n})\nexport class BackpackComponent implements OnInit {\n\n  public candyItem: CandyI;\n  public collectedCandy: CandyI[];\n  public totalCandy: number;\n  public candyId: string | number;\n\n  constructor(\n    private userStatsService: UserStatsService,\n    private router: Router\n  ) {\n    this.totalCandy = 0;\n  }\n\n  ngOnInit() {\n    // retrieve all candy items\n    this.setBackpack();\n  }\n\n  public setBackpack() {\n    this.userStatsService.getCurrentBackpackContent().subscribe(data => this.collectedCandy = data);\n    console.log('COLLECTED CANDY RETRIEVED ON INIT: ', this.collectedCandy);\n  }\n\n  seeCandyInfos(id: string | number) {\n    this.candyId = id;\n    console.log('candy id= ', this.candyId);\n    this.router.navigate(['play/candyDetails' + '/' + id]);\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"customColor\">\n    <ion-title text-center class=\"toolbarTitle\">Candy Infos</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"candyDetailsPage-container\">\n  <div class=\"candyDetailsPage\" *ngIf=\"candyItem\">\n\n      <div class=\"candyItemTitle\">\n        <div class=\"candyThumbnail\">\n          <img src=\"{{candyItem.image_front_url}}\">\n        </div>\n        <div>\n          <h1>{{ candyItem.product_name | shortenString:30 }}</h1>\n        </div> \n      </div>\n\n      <div class=\"candy-checklist row\">\n        <ul class=\"col\">\n          <li class=\"row\">\n            <div *ngIf=\"organic;else elseblock\"><img [src]=iconTrue /></div>\n            <ng-template #elseblock><img [src]=iconFalse /></ng-template>\n            Organic\n          </li>\n          <li class=\"row\">\n          <div *ngIf=\"additives;else elseblock\"><img [src]=iconTrue /></div>\n          <ng-template #elseblock><img [src]=iconFalse /></ng-template>\n          Additives</li>\n        </ul> \n        <ul class=\"col\">\n          <li class=\"row\">\n          <div *ngIf=\"glutenFree;else elseblock\"><img [src]=iconTrue /></div>\n          <ng-template #elseblock><img [src]=iconFalse /></ng-template>\n          Gluten free</li>\n          <li class=\"row\">\n          <div *ngIf=\"vegan;else elseblock\"><img [src]=iconTrue /></div>\n          <ng-template #elseblock><img [src]=iconFalse /></ng-template>\n          Vegan</li>\n          <li class=\"row\">\n          <div *ngIf=\"vegetarian;else elseblock\"><img [src]=iconTrue /></div>\n          <ng-template #elseblock><img [src]=iconFalse /></ng-template>\n          Vegetarian</li>\n        </ul> \n      </div>\n      \n      <div class=\"rubrik\">\n        <h1 (click)=\"toggleIngredients()\">Ingredients hierarchy<span class=\"arrowIcon\"></span></h1>\n        <div class=\"candyIngredients\" *ngIf=\"showIngredients\">\n          <table>\n            <tr *ngFor=\"let i of candyItem.ingredients_tags\">\n              <td>\n                {{ i | removeChars | removeUnderscore }}\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"rubrik\">\n        <h1 (click)=\"toggleNutriscore()\">Nutriscore</h1>\n        <div class=\"candyNutriscore\" *ngIf=\"showNutriscore\">\n          <table>\n            <tr *ngFor=\"let i of candyItem.nutriscore_data | keyvalue\">\n              <td>\n                {{ i.key | removeUnderscore }}\n              </td>\n              <td>\n                {{ i.value }}\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n      \n      <div class=\"rubrik\">\n        <h1 (click)=\"toggleAllergens()\">Allergens</h1>\n        <div class=\"candyAllergens\" *ngIf=\"showAllergens\">\n          <table>\n            <tr *ngFor=\"let i of candyItem.allergens_hierarchy\">\n              <td>\n                {{ i | removeChars }}\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n\n  </div>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { CandyApiService } from '../services/candy-api.service';\nimport { KeyvaluePipe } from '../../shared/pipes/keyvalue/keyvalue';\nimport { ShortenStringPipe } from '../../shared/pipes/shorten-string/shorten-string';\nimport { RemoveUnderscorePipe } from '../../shared/pipes/remove-underscore/remove-underscore';\nimport { RemoveCharsPipe } from '../../shared/pipes/remove-chars/remove-chars';\nimport { CandyI, CandyChecklistI } from '../../shared/models/candy.interface';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-candy-details',\n  templateUrl: './candy-details.component.html',\n  styleUrls: ['./candy-details.component.scss'],\n})\nexport class CandyDetailsComponent implements OnInit {\n\n  public candyItem: CandyI;\n  public candyId: string | number;\n\n  public candyChecklist: CandyChecklistI;\n  public additives: boolean;\n  public preservatives: boolean;\n  public organic: boolean;\n  public glutenFree: boolean;\n  public vegan: boolean;\n  public vegetarian: boolean;\n\n  public iconTrue = 'assets/icon/icon_true.png';\n  public iconFalse = 'assets/icon/icon_false.png';\n\n  public showIngredients: boolean;\n  public showAllergens: boolean;\n  public showNutriscore: boolean;\n  public selected: boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public candyApiService: CandyApiService,\n    public keyvaluepipe: KeyvaluePipe,\n    public removeUnderscore: RemoveUnderscorePipe,\n    public removeChars: RemoveCharsPipe,\n    public shortenString: ShortenStringPipe\n  ) {\n    this.candyItem = {\n      _id: '', product_name: '', generic_name_fr: '',\n      image_front_url: '', brands_tags: [], ingredients_tags: [],\n      nutriscore_data: [], additives_tags: [], allergens_hierarchy: [], labels: ''\n    };\n\n    this.candyChecklist = {\n      additives: false,\n      preservatives: false,\n      organic: false,\n      glutenFree: false,\n      vegan: false,\n      vegetarian: false\n    };\n\n    this.showIngredients = false;\n    this.showAllergens = false;\n    this.showNutriscore = false;\n  }\n\n  ngOnInit() {\n    this.displayCandyInfo(this.candyId);\n  }\n\n  \n  public displayCandyInfo(candyId: string | number)  {\n\n    this.activatedRoute.paramMap.subscribe(param => {\n      this.candyId = param.get('id');\n    });\n    console.log('activated route param= ', this.candyId);\n\n    this.candyApiService.getCandyById(this.candyId)\n    .subscribe( (response: CandyI ) => {\n      this.candyItem = response;\n\n      this.candyItem.product_name = response.product_name;\n      this.candyItem.image_front_url = response.image_front_url;\n      this.candyItem.ingredients_tags = response.ingredients_tags;\n      this.candyItem.nutriscore_data = response.nutriscore_data;\n      this.candyItem.allergens_hierarchy = response.allergens_hierarchy;\n      this.candyItem.additives_tags = response.additives_tags;\n      this.candyItem.labels = response.labels;\n\n      console.log('candy response: ', response);\n\n      for ( const x of this.candyItem.allergens_hierarchy ) {\n        if (x === 'gluten' ) {\n          this.candyChecklist.glutenFree = false;\n          this.glutenFree = false;\n        }\n      }\n     /*  ( x === 'milk' ||  x === 'butter' ||  x === 'eggs') */\n      for (const x of this.candyItem.ingredients_tags ) {\n        if ( x === 'milk') {\n          this.vegan = false;\n        }\n        if ( x === 'gelatin') {\n          this.vegetarian = false;\n          this.vegan = false;\n        } else { this.vegetarian = true; }\n      }\n\n      if ( this.candyItem.additives_tags && this.candyItem.additives_tags.length > 0) {\n        this.additives = true;\n      }\n\n      if ( this.candyItem.labels && this.candyItem.labels.length > 0 ) {\n        this.candyItem.labels.split(',').forEach(x => { if ( x === 'bio' ||  x === 'ab') {\n          this.organic = true; }\n        });\n      }\n    });\n  }\n\n  toggleIngredients() {\n    this.showIngredients = !this.showIngredients;\n    this.selected = !this.selected;\n  }\n\n  toggleAllergens() {\n    this.showAllergens = !this.showAllergens;\n  }\n\n  toggleNutriscore() {\n    this.showNutriscore = !this.showNutriscore;\n  }\n\n}\n","\n<ion-header>\n  <ion-toolbar color=\"customColor\">\n    <ion-title text-center class=\"toolbarTitle\">Candy to find</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"candyPageContainer\">\n  <div class=\"add-label\">\n    <img src=\"assets/graphicMat/bubble_add2.png\" alt=\"\" />\n  </div>\n  <!-- TODO:  create reusable loading block (shared module) + 'else block' -->\n  <div *ngIf=\"loading\" class=\"loading\">loading...</div> \n\n  <div *ngFor=\"let candyItem of candyList\" class=\"candyList\">\n    <div class=\"candyItem\">\n      <div class=\"candyThumbnail\">\n        <img src=\"{{candyItem.image_front_url}}\" class=\"magic\">\n      </div>\n      <div class=\"candyName\">\n        <!-- <h2>{{data.brands_tags[1]}}</h2> -->\n        <h1>{{ candyItem.product_name | shortenString:30 }}</h1>\n      </div>\n      <div class=\"plus-btn\">\n        <!-- <button (click)=\"sendId(candyItem._id)\"> -->\n        <button (click)=\"addCandyToBackpack(candyItem)\">\n          <img src=\"assets/graphicmat/zoomIn.png\" alt=\"plus-button\"/>\n        </button>\n      </div>\n    </div>\n  </div>\n  \n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { CandyApiService } from '../services/candy-api.service';\nimport { CandyI, CandyChecklistI } from '../../shared/models/candy.interface';\nimport { ShortenStringPipe } from '../../shared/pipes/shorten-string/shorten-string';\nimport { Observable } from 'rxjs';\n\nimport { UserStatsService } from '../services/user-stats.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-candy-list',\n  templateUrl: './candy-list.component.html',\n  styleUrls: ['./candy-list.component.scss'],\n})\nexport class CandyListComponent implements OnInit {\n\n  constructor(\n    private candyApiService: CandyApiService,\n    private userStatsService: UserStatsService,\n    public shortenString: ShortenStringPipe,\n    public toastController: ToastController) {\n\n    this.candyList = [];\n    this.candyItem = {\n      _id: '', product_name: '', amountInBackpack: 0,\n      image_front_url: '', brands_tags: [], ingredients_tags: [],\n      nutriscore_data: [], additives_tags: [], allergens_hierarchy: []\n    };\n\n    this.candyChecklist = {\n      additives: false,\n      preservatives: false,\n      organic: false,\n      glutenFree: false,\n      vegan: false,\n      vegetarian: false\n    };\n    this.itemsInBackpack = [];\n    this.totalCandy = 0;\n  }\n\n  loading: boolean;\n  public candyList: CandyI[];\n  public candyItem: CandyI;\n  public candyChecklist: CandyChecklistI;\n  public itemsInBackpack: CandyI[];\n  public totalCandy: number;\n\n  public totalCandy$: Observable<number>;\n\n  ngOnInit() {\n    this.loading = true;\n    this.candyApiService.getAllCandyFromApi()\n      .subscribe(\n        (response: CandyI[]) => {\n          this.candyList = response;\n          console.log(this.candyList);\n          this.loading = false;\n        }\n      );\n  }\n  addCandyToBackpack(candyItem: CandyI) {\n\n    this.totalCandy$ = this.userStatsService.getCurrentBackpackCount();\n\n    this.candyItem = candyItem;\n    this.candyItem.product_name = candyItem.product_name;\n    this.candyItem._id = candyItem._id;\n    this.candyItem.amountInBackpack = candyItem.amountInBackpack;\n    // this.candyItem.amountInBackpack = candyItem.amountInBackpack | 0;\n\n    // new candy has not been added yet\n    let added = false;\n    // look into items of backpack if new candy id already exists\n    for (const item of this.itemsInBackpack) {\n      // if id exists : only increase amount of this candy\n      if (item.product_name === this.candyItem.product_name) {\n        item.amountInBackpack += 1;\n        added = true;\n        break;\n      }\n    }\n    // if id does not exist : add new candy to backpack (and increase amount)\n    if (!added) {\n      this.candyItem.amountInBackpack += 1;\n      this.itemsInBackpack.push(this.candyItem);\n    }\n    // console.log(\"ITEMS : \", this.itemsInBackpack);\n    // console.log(this.itemsInBackpack.forEach(item => console.log(item.amountInBackpack)));\n\n    // save new total of all candy\n    this.userStatsService.update_totalCandyCount(this.totalCandy += 1);\n\n    // save backpack new content\n    this.userStatsService.update_backpackContent(this.itemsInBackpack);\n  }\n}\n","<p>\n  cards works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserStatsService } from '../services/user-stats.service';\nimport { LevelI } from '../../shared/models/level.interface';\nimport { LevelApiService } from '../services/level-api.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.scss'],\n})\nexport class CardsComponent implements OnInit {\n\n/*public level: LevelI;\n  public levels: LevelI[];\n  public levels$: Observable<any[]> = new Observable(); */\n\n  constructor(\n    private userStatsService: UserStatsService,\n    private levelApiService: LevelApiService\n  ) {\n/*  this.levels = [];\n    this.level = { idLevel: 1, levelName: '1', levelImg: '', bannerMessage: '', levelCard: '', levelCardName: '' };\n   */\n  }\n\n  ngOnInit() {\n\n/*  test\n    this.levels = this.userStatsService.retrieveLevelList(); // OK\n    console.log(this.levels);\n    this.level =  this.userStatsService.retrieveDefaultLevel();\n    console.log(this.level);\n*/\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"customColor\">\n    <ion-title text-center>Your level</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"levelPage-container\">\n\n  <div class=\"levelElements\">\n    <!-- <div>\n        <p>you have {{ totalPoints }} points</p> \n    </div> -->\n    <div class=\"levelNumber\">\n      <!-- <h2><span>{{ currentLevel.levelName }}</span></h2> -->\n    </div>\n\n    <div class=\"ribbon\">\n      <!-- <img src=\"{{ currentLevel.bannerMessage }}\" alt=\"\" /> -->\n    </div>\n\n    <div class=\"levelImage\">\n      <!-- <img src=\"{{ currentLevel.levelImg }}\" alt=\"\" /> -->\n    </div>\n  </div>\n\n  <div class=\"level-bottom-elements\">\n    <div class=\"level-bubble\">\n     <!--  <h2>Next mission:<br>Get the <span>{{ nextLevel.levelCardName }} !</span></h2> -->\n    </div>\n    <div class=\"next-level-card\">\n      <!-- <img src=\"{{ nextLevel.levelCard}}\" alt=\"\" /> -->\n    </div>\n  </div>\n  <button (click)=\"goToMyCards()\">see my cards</button>\n\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { LevelI } from '../../shared/models/level.interface';\nimport { Router } from '@angular/router';\nimport { LevelApiService } from '../services/level-api.service';\nimport { UserStatsService } from '../services/user-stats.service';\n@Component({\n  selector: 'app-level',\n  templateUrl: './level.component.html',\n  styleUrls: ['./level.component.scss'],\n})\nexport class LevelComponent implements OnInit {\n\n  public levels: LevelI[];\n  public currentLevel: LevelI;\n  public nextLevel: LevelI;\n\n  constructor(\n    private router: Router,\n    private userStatsService: UserStatsService,\n    private levelApiService: LevelApiService\n  ) { }\n\n\n  ngOnInit() {\n    this.setLevel();\n  }\n\n\n  public setLevel() {\n  }\n\n  public goToMyCards() {\n    this.router.navigate(['play/cards']);\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"customColor\">\n    <ion-title text-center class=\"toolbarTitle\">\n      Your map\n    </ion-title>\n    <ion-buttons end>\n      <button ion-button icon-only color=\"orange\" (click)=\"addCircle()\">\n        <ion-icon name=\"md-locate\"></ion-icon>\n      </button>\n      <button ion-button icon-only color=\"orange\" (click)=\"myAddresses()\">\n        <ion-icon name=\"md-globe\"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"mapPage-container\">\n\n  <div class=\"mapContainer\">\n    <div id=\"map\"></div>\n  </div>\n\n</ion-content>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { GeolocService } from '../../shared/services/geoloc.service';\n\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent implements OnInit {\n  @ViewChild('map', { static: false }) mapContainer: ElementRef;\n\n  public map: any;\n\n  public age: number;\n  public allowedDistance: number;\n  public mapBounds: number[];\n\n  constructor(\n    private geolocService: GeolocService\n\n    ) { }\n\n  ngOnInit() {\n    // this.geolocService.getCurrentLocation();\n    this.initMapWithParams();\n  }\n\n  public initMapWithParams() {\n\n    // this.geolocService.getCurrentLocation();\n\n    this.age = this.geolocService.getAgeRange();\n    console.log('user age= ', this.age);\n\n    this.allowedDistance = this.geolocService.findAllowedDistance(this.age);\n    console.log('dist= ', this.allowedDistance);\n\n    this.mapBounds = this.geolocService.calculateMapBounds(this.allowedDistance);\n    console.log('mapBounds= ', this.mapBounds);\n\n    this.geolocService.loadMapWithBounds();\n  }\n\n\n  addCircle() {}\n  myAddresses() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// import { AgeSelectComponent } from '../play/age-select/age-select.component';\nimport { CandyListComponent } from '../play/candy-list/candy-list.component';\nimport { CandyDetailsComponent } from './candy-details/candy-details.component';\nimport { BackpackComponent } from '../play/backpack/backpack.component';\nimport { LevelComponent } from './level/level.component';\nimport { CardsComponent } from './cards/cards.component';\nimport { MapComponent } from './map/map.component';\nimport { AddressesComponent } from './addresses/addresses.component';\nimport { UserStatsComponent } from './user-stats/user-stats.component';\n\nconst playModuleRoutes: Routes = [\n\n        { path: '', redirectTo: 'user-stats'},\n        { path: 'user-stats', component: UserStatsComponent },\n        { path: 'candyList', component: CandyListComponent },\n        { path: 'map', component: MapComponent },\n        { path: 'addresses', component: AddressesComponent },\n            // candyList module not active atm\n            // loadChildren: () => import('../play/candy-list/candy-list.module').then(m => m.CandyListModule) },\n        // { path: 'candyDetails', component: CandyDetailsComponent },\n        { path: 'candyDetails/:id', component: CandyDetailsComponent },\n        { path: 'backpack', component: BackpackComponent },\n        { path: 'level', component: LevelComponent },\n        { path: 'cards', component: CardsComponent },\n        { path: 'user-stats', component: UserStatsComponent }\n\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(playModuleRoutes)],\n    exports: [RouterModule]\n})\nexport class PlayRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { PipesModule } from '../shared/pipes/pipes.module';\nimport { KeyvaluePipe } from '../shared/pipes/keyvalue/keyvalue';\nimport { RemoveUnderscorePipe } from '../shared/pipes/remove-underscore/remove-underscore';\nimport { ShortenStringPipe } from '../shared/pipes/shorten-string/shorten-string';\nimport { RemoveCharsPipe } from '../shared/pipes/remove-chars/remove-chars';\n\nimport { PlayRoutingModule } from './play-routing.module';\n\nimport { CandyListComponent } from './candy-list/candy-list.component';\nimport { CandyDetailsComponent } from './candy-details/candy-details.component';\nimport { BackpackComponent } from './backpack/backpack.component';\nimport { AddressesComponent } from './addresses/addresses.component';\nimport { CardsComponent } from './cards/cards.component';\nimport { LevelComponent } from './level/level.component';\nimport { MapComponent } from './map/map.component';\nimport { UserStatsComponent } from './user-stats/user-stats.component';\n\nimport { LevelApiService } from './services/level-api.service';\n\n\n@NgModule({\n  declarations: [\n    // AgeSelectComponent,\n    CandyListComponent,\n    CandyDetailsComponent,\n    BackpackComponent,\n    AddressesComponent,\n    CardsComponent,\n    LevelComponent,\n    MapComponent,\n    UserStatsComponent\n\n  ],\n  imports: [\n    IonicModule,\n    CommonModule,\n    PlayRoutingModule,\n    SharedModule,\n    FormsModule,\n    PipesModule,\n\n  ],\n  providers : [\n    KeyvaluePipe,\n    RemoveUnderscorePipe,\n    ShortenStringPipe,\n    RemoveCharsPipe,\n    LevelApiService\n  ]\n})\nexport class PlayModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError, retry } from 'rxjs/operators';\nimport { CandyI } from '../../shared/models/candy.interface';\nimport { HttpErrorHandler, HandleError } from './http-error-handler.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    observe: 'response', // to display the full response\n    responseType: 'json'\n    // 'Authorization': 'my-auth-token'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandyApiService {\n\n  public candyList: CandyI[];\n  public candyItem: CandyI;\n\n  public candyListApiUrl =\n    'https://world.openfoodfacts.org/cgi/search.pl?search_terms=bonbon&search_simple=1&action=process&json=1&page_size=50';\n  public candyByIdApiUrl = 'https://world.openfoodfacts.org/api/v0/product/';\n\n  private handleError: HandleError;\n\n  constructor(\n    private httpService: HttpClient,\n    httpErrorHandler: HttpErrorHandler) {\n    this.candyItem = { _id: '', product_name: '', amountInBackpack: null };\n    this.handleError = httpErrorHandler.createHandleError('CandyApiService');\n  }\n\n  // GET all candy list from api, max 50 results\n  // | => TO DO : clean up doublons in response list with a pipe\n  public getAllCandyFromApi(): Observable<CandyI[]> {\n    return this.httpService\n      .get(this.candyListApiUrl)\n      .pipe(\n        map(\n          (response: Response) => {\n            // console.log(response);\n            const rawApiResponseObject: any = response;\n            const candyListFromApi: Array<any> = rawApiResponseObject.products;\n            // '.products' => for object from api contains 2 other main fields!\n            //  ( -- why is this syntax not working anymore? :\n            // const candyListFromApi: Array<any> = rawApiResponse.json().products as CandyI[];\n\n            // console.log(candyListFromApi);\n            return candyListFromApi as CandyI[];\n          }\n        ),\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError('getAllCandyFromApi', [])) // then handle the error\n      );\n  }\n\n  // get candy by id from api\n  public getCandyById(candyId: string | number): Observable<CandyI> {\n    return this.httpService\n    .get(this.candyByIdApiUrl + candyId + '.json')\n    .pipe(\n      map(\n        (response: Response) => {\n          const RawApiResponseCandyItem: any = response;\n          const candyItemFromApi: {} = RawApiResponseCandyItem.product;\n          console.log(candyItemFromApi);\n          return candyItemFromApi as CandyI;\n        }\n        ),\n        retry(3),\n        catchError(this.handleError)\n        );\n      }\n    }\n\n      // TO DO (search candy in list by name)\n    /*   filterById(id: string): Observable<Product> {\n        return this.getProducts()\n                  .filter(products => products.find(product => id === product.id));\n      }\n      */\n      //   search candy by name  => TODO replace method search api with search amongst list results\n        /* GET candy whose name contains search term */\n      /*  searchCandy(term: string): Observable<CandyI[]> {\n          term = term.trim();\n\n          // Add safe, URL encoded search parameter if there is a search term\n          const options = term ?\n            { params: new HttpParams().set('name', term) } : {};\n\n          return this.httpService.get<CandyI[]>(this.candyListApiUrl, options)\n            .pipe(\n              catchError(this.handleError<CandyI[]>('searchCandy', []))\n            );\n        } */\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError, retry } from 'rxjs/operators';\nimport { HttpErrorHandler, HandleError } from './http-error-handler.service';\nimport { LevelI } from '../../shared/models/level.interface';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LevelApiService {\n\n    public level: LevelI;\n    public levelList: LevelI[];\n    public levelListUrl = 'assets/levelsData.json';\n\n    private handleError: HandleError;\n\n    constructor(\n        private httpClient: HttpClient,\n        httpErrorHandler: HttpErrorHandler) {\n        this.levelList = [];\n        this.handleError = httpErrorHandler.createHandleError('LevelApiService');\n    }\n\n    getLevelList(): Observable<LevelI[]> {\n        return this.httpClient\n            .get(this.levelListUrl)\n            .pipe(\n                map(\n                    (response: Response) => {\n                        const rawApiResponseObject: any = response;\n                        const levelsListFromApi: Array<any> = rawApiResponseObject;\n                        // console.log(\"je suis levellist 0\", result[0]);\n                        return levelsListFromApi as LevelI[];\n                    }\n                ),\n                retry(3), // retry a failed request up to 3 times\n                catchError(this.handleError('getLevelList', [])) // then handle the error\n            );\n    }\n\n}\n","\n// this service exists to :\n\n// keep track and update / calculate\n\n// *current backpack content*\n// *current total points*\n// *current level*\n// *current set of cards*\n\n// => these infos will be available\n// accross all components of play module (as a badge displayed on pages)\n// ( + will determine a *level color theme* in a future feature )\n\nimport { Injectable } from '@angular/core';\nimport { LevelApiService } from '../services/level-api.service';\nimport { LevelI } from '../../shared/models/level.interface';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CandyI } from '../../shared/models/candy.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStatsService {\n\n  public level: LevelI;\n  public levels: LevelI[];\n  public nextLevel: LevelI;\n\n  public itemsInBackpack: CandyI[];\n  public itemsInBackpack$: Observable<CandyI[]>;\n  public totalCandy: number;\n  public totalPoints: number;\n\n  // keep track of candy list in backpack --\n  private backpackContent$ = new BehaviorSubject([]);\n\n  // keep track of candy total --\n  private totalCandyInBackpack$ = new BehaviorSubject(0);\n\n  // keep track of total points --\n  private totalPoints$ = new BehaviorSubject(this.totalPoints);\n\n  // keep track of current level --  whole object\n  public level$: BehaviorSubject<LevelI> = new BehaviorSubject(this.level);\n\n\n  constructor(\n    private levelApiService: LevelApiService\n  ) {\n    this.levelApiService.getLevelList().subscribe(data => {\n      this.levels = data;\n      this.level = this.levels[0];\n      this.nextLevel = this.levels[1];\n    });\n\n    this.itemsInBackpack = [];\n    this.totalCandy = 0;\n    this.totalPoints = this.totalCandy * 2;\n  }\n\n\n  // get level list from api (json atm)\n  public retrieveLevelList() {\n    return this.levels;\n  }\n  public retrieveDefaultLevel() {\n    return this.level;\n  }\n\n  // get current level\n  public getCurrentLevel() {\n    // this.setCurrentLevel(this.totalPoints);\n    return this.level$.asObservable();\n  }\n  // update current level ( besides regular points count )\n  public update_level(level: LevelI) {\n    this.level$.next(level);\n  }\n\n\n\n  // get current list of candy in backpack\n  public getCurrentBackpackContent() {\n    return this.backpackContent$.asObservable();\n  }\n  // update backpack\n  public update_backpackContent(itemsInBackpack: CandyI[]) {\n    this.backpackContent$.next(itemsInBackpack);\n  }\n\n\n  // get current amount of candy in backpack\n  public getCurrentBackpackCount() {\n    return this.totalCandyInBackpack$.asObservable();\n  }\n  // update total candy\n  public update_totalCandyCount(totalCandy: number) {\n    this.totalCandyInBackpack$.next(totalCandy);\n  }\n\n\n  // get current total points\n  public getCurrentTotalPoints() {\n    return this.totalPoints$.asObservable();\n  }\n  // update total points\n  public update_totalPoints(totalPoints: number) {\n    this.totalPoints$.next(totalPoints);\n  }\n\n\n  public setCurrentLevel(totalPoints: number) {\n\n    this.levels = this.retrieveLevelList();\n    this.totalPoints = totalPoints;\n\n    if (totalPoints > 7 && totalPoints <= 12) {\n      this.level = this.levels[1];\n      this.nextLevel = this.levels[2];\n    } else if (totalPoints > 12 && totalPoints <= 18) {\n      this.level = this.levels[2];\n      this.nextLevel = this.levels[3];\n    } else if (totalPoints > 18) {\n      this.level = this.levels[3];\n      this.nextLevel = this.levels[4];\n    } else {\n      this.level = this.levels[0];\n      this.nextLevel = this.levels[1];\n    }\n    this.update_level(this.level);\n  }\n\n    /* ------------------------------------------------------------------------------\n      Method to count points depending on specific criteria, e.g candy item weight\n        public setTotalPoints() {\n          this.itemsInBackpack$ = this.getCurrentBackpackContent();\n          this.itemsInBackpack$.forEach( item => {\n            if ( item.serving_size ) { ... })\n    } => not implementable atm for api data = not consistent enough */\n  // => For now total points will be count as 2 points/ candy item\n  //  ------------------------------------------------------------------------------\n\n}\n","<p>\n  user-stats works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { UserStatsService } from '../services/user-stats.service';\nimport { LevelI } from '../../shared/models/level.interface';\nimport { GeolocService } from '../../shared/services/geoloc.service';\n\n@Component({\n  selector: 'app-user-stats',\n  templateUrl: './user-stats.component.html',\n  styleUrls: ['./user-stats.component.scss'],\n})\nexport class UserStatsComponent implements OnInit {\n\n  public totalPoints: number;\n  public currentLevel: LevelI;\n\n  constructor(\n    private userStatsService: UserStatsService, private geolocService: GeolocService\n  ) {\n    this.totalPoints = 0;\n    this.currentLevel = this.userStatsService.retrieveDefaultLevel();\n  }\n\n  ngOnInit() {\n\n    this.geolocService.getCurrentLocation();\n\n    this.userStatsService.getCurrentTotalPoints();\n    console.log(this.totalPoints);\n\n    this.userStatsService.getCurrentLevel();\n    console.log(this.currentLevel);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keyvalue',\n  pure: true\n  // https://www.bennadel.com/blog/3325-understanding-pipe-instantiation-life-cycles-in-angular-4-2-3.htm\n})\nexport class KeyvaluePipe implements PipeTransform {\n\n    transform(object: object) {\n      const a = [];\n      for ( const key in object) {\n        if (object.hasOwnProperty(key)) {\n          a.push({key, value: object[key]});\n        }\n      }\n      // console.log('je suis keyvalue pipe object: ', a);\n      return a;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { KeysPipe } from './keys/keys';\nimport { KeyvaluePipe } from './keyvalue/keyvalue';\nimport { RemoveUnderscorePipe } from './remove-underscore/remove-underscore';\nimport { ShortenStringPipe } from './shorten-string/shorten-string';\nimport { RemoveCharsPipe } from './remove-chars/remove-chars';\n\n@NgModule({\n    declarations: [\n        KeysPipe,\n        KeyvaluePipe,\n        RemoveUnderscorePipe,\n        RemoveUnderscorePipe,\n        ShortenStringPipe,\n        RemoveCharsPipe],\n    imports: [],\n    exports: [KeysPipe,\n        KeyvaluePipe,\n        RemoveUnderscorePipe,\n        RemoveUnderscorePipe,\n        ShortenStringPipe,\n        RemoveCharsPipe]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeChars',\n})\nexport class RemoveCharsPipe implements PipeTransform {\n\n  transform(value: string) {\n    if (value.charAt(2) === ':') {\n      return value.substring(3, value.length);\n      // or return value.slice(3, value.length);\n  }\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeUnderscore',\n  pure: true\n})\nexport class RemoveUnderscorePipe implements PipeTransform {\n\n\n  transform(value: string) {\n\n    const toReplace = /[-_]/gm;\n    if (value) {\n      return value = value.toString().replace(toReplace , ' ');\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shortenString',\n})\nexport class ShortenStringPipe implements PipeTransform {\n\n  transform(value: string, maxChars: number) {\n    let lastEmptyIndex = null;\n\n    if (value.length > maxChars) {\n      if (value.charAt(maxChars - 1) !== ' ') {\n        for (let i = maxChars - 1; i >= 0; i--) {\n          if (value[i] === ' ') {\n            lastEmptyIndex = i;\n            break;\n          } else {\n            lastEmptyIndex = lastEmptyIndex;\n          }\n        }\n      } else { lastEmptyIndex = value[maxChars]; }\n      return value.substring(0, lastEmptyIndex);\n    } else { return value; }\n  }\n}\n\n"],"sourceRoot":"webpack:///","file":"play-play-module-ngfactory-es5.js"}